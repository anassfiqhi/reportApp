<Page ux:Class="FeedDetailPage" Background="#FFF">
    <JavaScript>
        var Fetch = require("modules/fetcher");
        var Share = require("FuseJS/Share");
        var Observable = require("FuseJS/Observable");
        var storage = require("modules/storage");
        var post = Observable({});
        var nopost = Observable(true);
        var content = Observable();
        var comments = Observable();
        var upvotes = Observable(0);
        var commentCnt = Observable(0);
        var message = Observable();
        var errMessage = Observable();
        var processFailed = Observable(false);
        var notLoggedIn = Observable(false);
        var image = Observable();
        var video = Observable();
        var hasVideo = Observable(true);
        var hasUpVoted = Observable(false);

        function addComment() {
            var Environment = require('FuseJS/Environment');
            var id_;

            if (Environment.preview) {
                id_ = "5b3a2ed3cf700c29aca27458";
            } else {
                id_ = "5b3a2ddbdfecff00149ab29c";
            }
            if (content.value) {
                Fetch.addComment({
                    body: content.value,
                    post: post.value.id,
                    author: localStorage.getItem('id') || id_
                })
                .then(res => {
                    comments.insertAt(0, res);
                    content.value = "";
                    processFailed.value = false;
                    commentCnt.value = commentCnt.value += 1; 
                })
                .catch(err => {
                    console.log(err);
                    processFailed.value = true;
                    errMessage.value = 'You may have lost your connection';
                });
            } else {
                processFailed.value = true;
                errMessage.value = 'Please provide content';
            }
        }

        function clearComments() {
            comments.clear();
            commentCnt.value = 0;
        }

        function upvote() {
            if (!hasUpVoted.value) {
                upvotes.value = upvotes.value + 1
                hasUpVoted.value = true;
                Fetch.upVote(true, post.value.id)
                .then(res => {
                    post.value.upvotes += 1
                })
                .catch(err => console.log(err))
            } else {
                return;
            }
        }

        
        function getComments(id) {
            clearComments();
            message.value = "loading comments"
            Fetch.getComments(id)
            .then(res => {
                if (res.length) {
                    commentCnt.value = res.length;
                    comments.replaceAll(res);
                } else {
                    message.value = 'be the first to comment'
                }
            })
            .catch(err => message.value = 'be the first to comment')
        }

        function parseRes(post) {
            return {
                "comments": post.comments,
                "author": post.author,
                "upvotes": post.upvotes,
                "downvotes": post.downvotes,
                "title": post.title,
                "body": post.body,
                "time": post.time,
                "loc": post.loc,
                "lat": post.lat,
                "long": post.long,
                "image": post.image,
                "anonymous": post.anonymous,
                "from_twitter": post.from_twitter,
                "urls": post.urls,
                "featured": post.featured,
                "hasVideo": post.image.endsWith('.mp4'),
                "createdAt": post.createdAt,
                "id": post.id
            };
        }

        function clearPost() {
            // Ok.Children.Remove(this);
        }

        this.Parameter.onValueChanged(module, res => {
            video.value = "http://res.cloudinary.com/jesse-dirisu/video/upload/v1531388420/Please%20upload_1531386827318.mp4";
            hasVideo.value = true;
            message.value = "Loading post..."
            storage.getPostById(res)
                .then(data => {
                    post.value = parseRes(data);
                    hasVideo.value = post.value.hasVideo;
                    upvotes.value = data.upvotes;
                    setTimeout(() => getComments(data.id), 500);
                    nopost.value = false;
                    message.value = ""
                    if (hasVideo.value) {
                        video.value = post.value.image;
                    } else {
                        image.value = post.value.image;
                    }
                })
                .catch(err => {
                    Fetch.getPost(res)
                        .then(data => {
                            post.value = parseRes(data);
                            upvotes.value = data.upvotes;
                            image.value = post.value.image;
                            hasVideo.value = post.value.hasVideo;
                            setTimeout(() =>  getComments(data.id), 500);
                            message.value = "Loading post...";
                            nopost.value = false;
                            if (hasVideo.value) {
                                video.value = post.value.image;
                            } else {
                                image.value = post.value.image;
                            }
                        })
                        .catch(err => {
                            console.log(err);
                            message.value = "Ooopsy... a network error has occured please check that you have internet connection";
                            nopost.value = true;
                        }
                    )
                }
            )
        })

        module.exports = {
            nopost: nopost,
            upvotes: upvotes,
            message: message,
            post: post,
            content: content,
            comments: comments,
            commentCnt: commentCnt,
            addComment: addComment,
            getComments: getComments,
            upvote: upvote,
            errMessage: errMessage,
            processFailed: processFailed,
            notLoggedIn: notLoggedIn,
            clearComments: clearComments,
            clearPost: clearPost,
            image: image,
            video: video,
            hasVideo: hasVideo,
            shareText: function() {
                Share.shareText(`${post.value.title} ${post.value.body}`, "https://www.reportapp.com/");
            }
        }
    </JavaScript>
    <!-- <Deactivated Handler="{clearPost}" /> -->
    <WhilePageActive ux:Name="Ok">
        <Match Value="{nopost}">
            <Case Bool="true">
                <App.Text Alignment="Center" TextAlignment="Center" FontSize="20" TextWrapping="Wrap" Value="{message}" />
            </Case>
            <Case Bool="false">
                <!-- <Circle Color="#3D8B37" HitTestMode="LocalBoundsAndChildren" Margin="0, 0, 20, 50" Alignment="BottomRight" Padding="10" Layer="Overlay">
                    <Mat.Icon TextAlignment="Center" Alignment="Center" ux:Name="add" Value="&#xe80d;" TextColor="#FFF" FontSize="25" />
                    <Clicked Handler="{shareText}" />
                    <WhilePressed>
                        <Scale Factor="0.8" />
                    </WhilePressed>
                </Circle> -->
                <Rectangle Alignment="BottomCenter" Color="#E8C11C" HitTestMode="LocalBoundsAndChildren" Layer="Overlay" Margin="0, 0, 0, 50" Width="200" Padding="30, 5" CornerRadius="5" Height="35" >
                    <Grid Width="60%" Alignment="HorizontalCenter" ColumnCount="2" CellSpacing="5" Columns="auto, 1*">
                        <Mat.Icon Alignment="CenterRight" TextAlignment="Right" Value="&#xe80d;" TextColor="#25333D" FontSize="15" />
                        <App.Text Value="Share" Alignment="CenterLeft" TextAlignment="Left" TextColor="#25333D" FontSize="14" />
                    </Grid>
                    <Clicked Handler="{shareText}" />
                    <WhilePressed>
                        <Scale Factor="0.8" />
                    </WhilePressed>
                </Rectangle>
                <DockPanel>
                    <ScrollView Padding="30, 70, 30, 10">
                        <StackPanel>
                            <App.Header TextColor="#318700" TextWrapping="Wrap" Value="{post.title}" TextAlignment="Center" Alignment="Center" FontSize="18" />
                            <Match Value="{post.anonymous}">
                                <Case Bool="true">
                                    <App.Header TextColor="#25333D" TextAlignment="Center" Alignment="Center" TextWrapping="Wrap" FontSize="14" Value="Anonymous User" />
                                </Case>
                                <Case Bool="false">
                                    <App.Header TextColor="#25333D" TextAlignment="Center" Alignment="Center" FontSize="14" Value="{post.author.username}" />
                                </Case>
                            </Match>
                            <Match Value="{post.anonymous}">
                                <Case Bool="false">
                                    <App.Text TextColor="#25333D" TextWrapping="Wrap" TextAlignment="Center" Alignment="Center" FontSize="12" Value="{post.loc}" />
                                </Case>
                            </Match>
                            <App.Text TextColor="#25333D" TextAlignment="Center" Alignment="Center" FontSize="12" Value="{post.time}" />
                            <Match ux:Name="mediaCon" Value="{hasVideo}">
                                <Case Bool="true">
                                    <WhilePageActive>
                                        <DockPanel>
                                            <Rectangle Layer="Background" Color="#000" Opacity="0.5" />
                                            <Rectangle Alignment="Left" ux:Name="progressBar" Dock="Top" Fill="#E8C11CAA" Width="0%" Height="4" />
                                            <Video Height="200" ux:Name="postvideo" Url="{video}" Dock="Fill" StretchMode="UniformToFill">
                                                <ProgressAnimation>
                                                    <Change progressBar.Width="100" />
                                                </ProgressAnimation>
                                                <WhilePlaying>
                                                    <!-- <Set playing.Value="true"/> -->
                                                </WhilePlaying>
                                                <WhileLoading>
                                                    <App.Text TextColor="#FFF" TextWrapping="Wrap" TextAlignment="Center" Alignment="Center" FontSize="12" Value="Loading Video..." />
                                                </WhileLoading>
                                                <WhileFailed>
                                                    <App.Text TextColor="#FFF" TextWrapping="Wrap" TextAlignment="Center" Alignment="Center" FontSize="12" Value="Failed to loading video" />
                                                </WhileFailed>
                                            </Video>
                                            <Grid Dock="Bottom" ColumnCount="3" RowCount="1">
                                                <WhileNavigating>
                                                    <Stop Target="postvideo" />
                                                </WhileNavigating>
                                                <Rectangle Height="40" Color="#E8C11CAA">
                                                    <Clicked>
                                                        <Play Target="postvideo" />
                                                        <!-- <Set playing.Value="true"/> -->
                                                    </Clicked>
                                                    <Icon FontSize="30" TextColor="#FFF" Value="&#xf2be;" />
                                                </Rectangle>
                                                <Rectangle Height="40" Color="#E8C11CAA">
                                                    <Clicked>
                                                        <Pause Target="postvideo" />
                                                        <!-- <Set playing.Value="false"/> -->
                                                    </Clicked>
                                                    <Icon FontSize="30" TextColor="#FFF" Value="&#xf2ad;" />
                                                </Rectangle>
                                                <Rectangle Height="40" Color="#E8C11CAA">
                                                    <Clicked>
                                                        <Stop Target="postvideo" />
                                                        <!-- <Set playing.Value="false" /> -->
                                                    </Clicked>
                                                    <Icon FontSize="30" TextColor="#FFF" Value="&#xf323;" />
                                                </Rectangle>
                                            </Grid>
                                        </DockPanel>
                                    </WhilePageActive>
                                </Case>
                                <Case Bool="false">
                                    <WhilePageActive>
                                        <Rectangle Height="150" Width="97%" Margin="0, 15, 0, 15" Alignment="Center" Color="#25333D">
                                            <ImageFill MemoryPolicy="UnloadUnused" Url="{image}" StretchMode="UniformToFill" />
                                        </Rectangle>
                                    </WhilePageActive>
                                </Case>
                            </Match>
                            <App.Text MinHeight="100" TextWrapping="Wrap" FontSize="15" Alignment="Left" Value="{post.body}" />
                            <Panel Color="#FFF" ux:Name="commentBar" Visibility="Visible" Width="100%">
                                <Rectangle Layer="Background" Color="#FFF" />
                                <DockPanel>
                                    <StackPanel Padding="5" Dock="Top" ItemSpacing="5">
                                        <WhileTrue Value="{notLoggedIn}">
                                            <Panel Dock="Top" Padding="5">
                                                <Rectangle CornerRadius="5" Layer="Background" Color="#9B0D5433" StrokeColor="#9B0D54" />
                                                <App.Text TextColor="#9B0D54" Value="Please login to comment" TextAlignment="Center" />
                                            </Panel>
                                        </WhileTrue>
                                        <WhileTrue Value="{processFailed}">
                                            <Panel Dock="Top" Padding="5">
                                                <Rectangle CornerRadius="5" Layer="Background" Color="#9B0D5433" StrokeColor="#9B0D54" />
                                                <App.Text TextColor="#9B0D54" Value="{errMessage}" TextAlignment="Center" />
                                            </Panel>
                                        </WhileTrue>
                                        <FormLabel Value="Comment" Margin="0" TextAlignment="Left" Alignment="Left" />
                                        <App.TextBox Radius="0" LineCol="#000" MinHeight="80" Text="Your Comments" Value="{content}" />
                                        <Rectangle Alignment="Right" CornerRadius="0" Clicked="{addComment}" Padding="10" Height="40" Color="#FDD006" >
                                            <App.Text Value="POST COMMENT" TextColor="#000" FontSize="14" />
                                        </Rectangle>
                                    </StackPanel>
                                    <WhileEmpty Items="{comments}">
                                        <App.Text MinHeight="200" Value="{message}" Alignment="Center" />
                                    </WhileEmpty>
                                    <WhileCount Items="{comments}" GreaterThan="0">
                                        <ScrollView>
                                            <StackPanel>
                                                <Each Items="{comments}">
                                                    <Deferred>
                                                        <Panel>
                                                            <Rectangle Color="#EEE" Alignment="Top" Height="1"/>
                                                            <Rectangle Color="#25333D" Alignment="Left" Width="5"/>
                                                            <StackPanel Alignment="Left" Padding="5" ItemSpacing="3">
                                                                <App.Header Alignment="Left" TextColor="#25333D" Value="{author.name}" Margin="3,0" FontSize="15"/>
                                                                <App.Text Alignment="Left" TextColor="#25333D" Value="{time}" FontSize="10" Margin="3,0"/>
                                                                <StackPanel Alignment="Left" Padding="5" ItemSpacing="3">
                                                                    <App.Text TextWrapping="Wrap" TextAlignment="Left" TextColor="#25333D" Value="{body}" FontSize="12" Margin="0,0,10,0"/>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </Panel>
                                                    </Deferred>
                                                    <WhileBusy>
                                                        <App.Text Value="Loading comments..." TextAlignment="Center" Alignment="VerticalCenter" />
                                                    </WhileBusy>
                                                </Each>
                                            </StackPanel>
                                        </ScrollView>
                                    </WhileCount> 
                                </DockPanel>
                            </Panel>
                        </StackPanel>
                    </ScrollView>
                    <Grid Dock="Bottom" Padding="10" Alignment="Top" Columns="1*,1*,6*" ColumnCount="3">
                        <Rectangle Layer="Background" Color="#FFF" StrokeColor="#EEE"/>
                        <Button Alignment="Center" HitTestMode="LocalBoundsAndChildren">
                            <DockPanel>
                                <Icon TextColor="#318700" FontSize="12" Dock="Left" Value="&#xf1a1;" />
                                <App.Text TextColor="#318700" FontSize="12" Value="{commentCnt}" />
                            </DockPanel>
                        </Button>
                        <Button Alignment="Center" Clicked="{upvote}" HitTestMode="LocalBoundsAndChildren">
                            <DockPanel>
                                <Icon ux:Name="upVter" TextColor="#318700" FontSize="12" Dock="Left" Value="&#xf233;" />
                                <App.Text TextColor="#318700" FontSize="12" Value="{upvotes}" />
                            </DockPanel>
                            <WhilePressed>
                                <Change upVter.TextColor="#007CBB" />
                            </WhilePressed>
                        </Button>
                        <Grid Columns="2*,auto, 1*" ColumnCount="3" CellSpacing="1">
                            <Match Value="{post.anonymous}">
                                <Case Bool="true">
                                    <App.Header TextColor="#318700" TextAlignment="Right" Alignment="CenterRight" FontSize="10" Value="Anonymous User" />
                                </Case>
                                <Case Bool="false">
                                    <App.Header TextColor="#318700" TextAlignment="Right" Alignment="CenterRight" FontSize="10" Value="{post.author.username}" />
                                </Case>
                            </Match>
                            <App.Text TextColor="#318700" Value="|" />
                            <App.Text MaxLength="16" TextAlignment="Left" Alignment="CenterLeft" TextColor="#318700" FontSize="8" Value="{post.time}" />
                        </Grid>
                    </Grid>
                </DockPanel>
            </Case>
        </Match>
    </WhilePageActive>
</Page>